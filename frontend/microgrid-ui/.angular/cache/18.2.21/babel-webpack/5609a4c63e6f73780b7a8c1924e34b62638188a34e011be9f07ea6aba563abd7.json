{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/ASUS/Documents/GitHub/seminario-integrador/frontend/microgrid-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nexport let ApiService = /*#__PURE__*/(() => {\n  class ApiService {\n    constructor() {\n      this.base = '/api/v1';\n    }\n    validate(_) {\n      return _asyncToGenerator(function* () {\n        return {\n          ok: true,\n          data: {\n            issues: []\n          }\n        };\n      })();\n    }\n    simulate(_) {\n      return _asyncToGenerator(function* () {\n        return {\n          ok: true,\n          data: {\n            runId: 'demo-run-001'\n          }\n        };\n      })();\n    }\n    results(_) {\n      return _asyncToGenerator(function* () {\n        return {\n          ok: true,\n          data: {\n            kpis: {\n              lcoe: 0.124,\n              served: 0.967,\n              nse: 0.033,\n              p_inst: 120\n            }\n          }\n        };\n      })();\n    }\n    static {\n      this.ɵfac = function ApiService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ApiService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ApiService,\n        factory: ApiService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ApiService;\n})();","map":{"version":3,"names":["ApiService","constructor","base","validate","_","_asyncToGenerator","ok","data","issues","simulate","runId","results","kpis","lcoe","served","nse","p_inst","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ASUS\\Documents\\GitHub\\seminario-integrador\\frontend\\microgrid-ui\\src\\app\\services\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nexport interface ApiResult<T=unknown> { ok: boolean; data?: T; error?: string; }\n@Injectable({ providedIn: 'root' })\nexport class ApiService {\n  base = '/api/v1';\n  async validate(_: unknown): Promise<ApiResult>{ return { ok:true, data:{ issues: [] } }; }\n  async simulate(_: { zni: string }): Promise<ApiResult<{ runId: string }>>{ return { ok:true, data:{ runId:'demo-run-001' } }; }\n  async results(_: string): Promise<ApiResult<{ kpis: any }>>{ return { ok:true, data:{ kpis:{ lcoe:0.124, served:0.967, nse:0.033, p_inst:120 } } }; }\n}\n"],"mappings":";;AAGA,WAAaA,UAAU;EAAjB,MAAOA,UAAU;IADvBC,YAAA;MAEE,KAAAC,IAAI,GAAG,SAAS;;IACVC,QAAQA,CAACC,CAAU;MAAA,OAAAC,iBAAA;QAAuB,OAAO;UAAEC,EAAE,EAAC,IAAI;UAAEC,IAAI,EAAC;YAAEC,MAAM,EAAE;UAAE;QAAE,CAAE;MAAC;IAAC;IACnFC,QAAQA,CAACL,CAAkB;MAAA,OAAAC,iBAAA;QAA0C,OAAO;UAAEC,EAAE,EAAC,IAAI;UAAEC,IAAI,EAAC;YAAEG,KAAK,EAAC;UAAc;QAAE,CAAE;MAAC;IAAC;IACxHC,OAAOA,CAACP,CAAS;MAAA,OAAAC,iBAAA;QAAsC,OAAO;UAAEC,EAAE,EAAC,IAAI;UAAEC,IAAI,EAAC;YAAEK,IAAI,EAAC;cAAEC,IAAI,EAAC,KAAK;cAAEC,MAAM,EAAC,KAAK;cAAEC,GAAG,EAAC,KAAK;cAAEC,MAAM,EAAC;YAAG;UAAE;QAAE,CAAE;MAAC;IAAC;;;yCAJzIhB,UAAU;MAAA;IAAA;;;eAAVA,UAAU;QAAAiB,OAAA,EAAVjB,UAAU,CAAAkB,IAAA;QAAAC,UAAA,EADG;MAAM;IAAA;;SACnBnB,UAAU;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}